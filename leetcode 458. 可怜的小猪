458. 可怜的小猪
有 buckets 桶液体，其中 正好 有一桶含有毒药，其余装的都是水。它们从外观看起来都一样。为了弄清楚哪只水桶含有毒药，你可以喂一些猪喝，通过观察猪是否会死进行判断。不幸的是，你只有 minutesToTest 分钟时间来确定哪桶液体是有毒的。

喂猪的规则如下：

选择若干活猪进行喂养
可以允许小猪同时饮用任意数量的桶中的水，并且该过程不需要时间。
小猪喝完水后，必须有 minutesToDie 分钟的冷却时间。在这段时间里，你只能观察，而不允许继续喂猪。
过了 minutesToDie 分钟后，所有喝到毒药的猪都会死去，其他所有猪都会活下来。
重复这一过程，直到时间用完。
给你桶的数目 buckets ，minutesToDie 和 minutesToTest ，返回在规定时间内判断哪个桶有毒所需的 最小 猪数。

 

示例 1：

输入：buckets = 1000, minutesToDie = 15, minutesToTest = 60
输出：5
示例 2：

输入：buckets = 4, minutesToDie = 15, minutesToTest = 15
输出：2
示例 3：

输入：buckets = 4, minutesToDie = 15, minutesToTest = 30
输出：2
 

提示：

1 <= buckets <= 1000
1 <= minutesToDie <= minutesToTest <= 100

题解：
这是一题经典的信息论的题目。
先说以前一题经典的题目，有100杯水，其中一杯有毒，仅通过一次喝水测出来是哪杯水有毒，至少需要几只小白鼠，自然而然的就会想到通过二进制去判断
0000001
0000010
0000011
0000100
...
1111111
每只小白鼠代表二进制的一位，该位为1的，则小白鼠要喝这杯水，通过小白鼠死与活，判断该位为1或0，7只小白鼠则可以表示2^7=128杯水。

进一步思考，小白鼠喝水的死与活，承载了2个信息，那么针对本题，可以多轮喝水，又意味着什么呢？
假设只有一只小白鼠，可以喝3轮水
第一轮，喝了第1杯死了，则第一杯有毒，否则继续
第二轮，喝了第2杯死了，则第二杯有毒，否则继续
第三轮，喝了第3杯死了，则第三杯有毒，
三轮都活下来了，说明第4杯水有毒。
说明n轮喝水可以获得n+1杯水的信息。
那如果有两只小白鼠，喝3轮水又有什么情况呢？
假设第1只小白鼠，死于第x轮，第二只小白鼠死于第y轮，且x,y在[1,2,3,没死]四种情况，所以可以表示4*4=16杯水的情况

所以k只小白鼠n轮喝水可以或者最多(n+1)^k杯水的情况，至此本题思路也清晰了 ,求(n+1)^k>=buckets，其中n=minutesToTest/minutesToDie的最小k值

代码如下：
class Solution 
{
public:
    int poorPigs(int buckets, int minutesToDie, int minutesToTest) 
    {
        int base = minutesToTest / minutesToDie + 1;

        int res = ceil(log(buckets) / log(base));
        return res;
    }   
};
